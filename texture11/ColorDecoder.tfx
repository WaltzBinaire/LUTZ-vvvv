//@author: princemio
//@help: standard LUT Creator
//@tags: color
//@credits: 

Texture2D texture2d : PREVIOUS;


float2 R:TARGETSIZE;




SamplerState linearSampler : IMMUTABLE
{
	Filter = MIN_MAG_MIP_POINT;
	AddressU = Clamp;
	AddressV = Clamp;
};

struct psInput
{
	float4 p : SV_Position;
	float2 uv : TEXCOORD0;
};

float size=32;

float4 PS(psInput input) : SV_Target
{
	float4 c = texture2d.Sample(linearSampler,input.uv);
	int2 uvRes = input.uv*R;
	if (uvRes.x < size*(size) && uvRes.y < size) {
	c=1;	
	c.r=uvRes.x%size;
	c.r = ((c.r)/(size-1));
	c.g=uvRes.y%size;
	c.g = ((c.g)/(size-1));
	c.b=(int)(uvRes.x/size);
	c.b/=(size-1);
	}
	

	return c;
}

technique10 Process
{
	pass P0
	{
		SetPixelShader(CompileShader(ps_4_0,PS()));
	}
}



